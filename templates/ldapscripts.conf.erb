#  Copyright (C) 2005 Ganaël LAPLANCHE - Linagora
#  Copyright (C) 2006-2013 Ganaël LAPLANCHE
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#  USA.

# Note for Debian users:
# On Debian system ldapscripts will try to parse and use nslcd config.
# Look on commented variables and description lines started with DEBIAN.
# But you could override it's values here.

# NOTE: This file is managed by Puppet.
# Any local changes will be overwritten.

# LDAP server
# DEBIAN: value from /etc/nslcd.conf (uri) is used.
<% if @server -%>
SERVER="<%= @server %>"
<% else -%>
#SERVER="ldap://localhost"
<% end -%>

# Suffixes
# DEBIAN: values from /etc/nslcd.conf (base maps) are used.
<% if @suffix -%>
SUFFIX="<%= @suffix %>" # Global suffix
<% else -%>
#SUFFIX="dc=example,dc=com" # Global suffix
<% end -%>
<% if @gsuffix -%>
GSUFFIX="<%= @gsuffix %>" # Groups ou (just under $SUFFIX)
<% else -%>
#GSUFFIX="ou=Groups"        # Groups ou (just under $SUFFIX)
<% end -%>
<% if @usuffix -%>
USUFFIX="<%= @usuffix %>" # Users ou (just under $SUFFIX)
<% else -%>
#USUFFIX="ou=Users"         # Users ou (just under $SUFFIX)
<% end -%>
<% if @msuffix -%>
MSUFFIX="<%= @msuffix %>" # Machines ou (just under $SUFFIX)
<% else -%>
#MSUFFIX="ou=Machines"      # Machines ou (just under $SUFFIX)
<% end -%>

# Authentication type
# If empty, use simple authentication
# Else, use the value as an SASL authentication mechanism
<% if @saslauth -%>
SASLAUTH="<%= @saslauth %>"
<% else -%>
SASLAUTH=""
<% end -%>
#SASLAUTH="GSSAPI"

# Simple authentication parameters
# The following BIND* parameters are ignored if SASLAUTH is set
BINDDN="<%= @binddn %>"
# The following file contains the raw password of the BINDDN
# Create it with something like : echo -n 'secret' > $BINDPWDFILE
# WARNING !!!! Be careful not to make this file world-readable
<% if @bindpwd -%>
#BINDPWDFILE="/etc/ldapscripts/ldapscripts.passwd"
<% else -%>
BINDPWDFILE="<%= @bindpwdfile %>"
<% end -%>
# For older versions of OpenLDAP, it is still possible to use
# unsecure command-line passwords by defining the following option
# AND commenting the previous one (BINDPWDFILE takes precedence)
<% if @bindpwd -%>
BINDPWD="<%= @bindpwd %>"
<% else -%>
#BINDPWD="secret"
<% end -%>


# Start with these IDs *if no entry found in LDAP*
GIDSTART="<%= @gidstart %>" # Group ID
UIDSTART="<%= @uidstart %>" # User ID
MIDSTART="<%= @midstart %>" # Machine ID

# Group membership management
# ObjectCLass used for groups
# Possible values : posixGroup, groupOfNames, groupOfUniqueNames (case-sensitive !)
# Warning : when using groupOf*, be sure to be compliant with RFC 2307bis (AUXILIARY posixGroup).
# Also, do not mix posixGroup and groupOf* entries up in you directory as, within RFC 2307bis,
# the former is a subset of the latter. The ldapscripts wouldn't cope well with this configuration.
GCLASS="<%= @gclass %>"   # Leave "posixGroup" here if not sure !
# When using  groupOfNames or groupOfUniqueNames, creating a group requires an initial
# member. Specify it below, you will be able to remove it once groups are populated.
<% if @gdummymember -%>
GDUMMYMEMBER="<%= @gdummymember %>"
<% else -%>
#GDUMMYMEMBER="uid=dummy,$USUFFIX,$SUFFIX"
<% end -%>


# User properties
# DEBIAN: values from /etc/adduser.conf are used.
<% if @ushell -%>
USHELL="<%= @ushell %>"
<% else -%>
#USHELL="/bin/sh"
<% end -%>
<% if @homes -%>
UHOMES="<%= @uhomes %>" # You may use %u for username here
<% else -%>
#UHOMES="/home/%u"     # You may use %u for username here
<% end -%>
CREATEHOMES="<%= @createhomes %>"      # Create home directories and set rights ?
<% if @homeskel -%>
HOMESKEL="<%= @homeskel %>" # Directory where the skeleton files are located. Ignored if undefined or nonexistant.
<% else -%>
#HOMESKEL="/etc/skel"  # Directory where the skeleton files are located. Ignored if undefined or nonexistant.
<% end -%>
<% if @homeperms -%>
HOMEPERMS="<%= @homeperms %>" # Default permissions for home directories
<% else -%>
#HOMEPERMS="755"       # Default permissions for home directories
<% end -%>


# User passwords generation
# Command-line used to generate a password for added users.
# You may use %u for username here ; special value "<ask>" will ask for a password interactively
# WARNING    !!!! This is evaluated, everything specified here will be run !
# WARNING(2) !!!! Some systems (Linux) use a blocking /dev/random (waiting for enough entropy).
#                 In this case, consider using /dev/urandom instead.
#PASSWORDGEN="cat /dev/random | LC_ALL=C tr -dc 'a-zA-Z0-9' | head -c8"
#PASSWORDGEN="pwgen"
#PASSWORDGEN="echo changeme"
#PASSWORDGEN="echo %u"
#PASSWORDGEN="<ask>"
PASSWORDGEN="<%= @passwordgen %>"

# User passwords recording
# you can keep trace of generated passwords setting PASSWORDFILE and RECORDPASSWORDS
# (useful when performing a massive creation / net rpc vampire)
# WARNING !!!! DO NOT FORGET TO DELETE THE GENERATED FILE WHEN DONE !
# WARNING !!!! DO NOT FORGET TO TURN OFF RECORDING WHEN DONE !
RECORDPASSWORDS="<%= @recordpasswords %>"
PASSWORDFILE="<%= @passwordfile %>"

# Where to log
LOGFILE="<%= @logfile %>"

# Temporary folder
<% if @tmpdir -%>
TMPDIR="<%= @tmpdir %>"
<% else -%>
#TMPDIR="/tmp"
<% end -%>

# Various binaries used within the scripts
# Warning : they also use uuencode, date, grep, sed, cut, which... 
# Please check they are installed before using these scripts
# Note that many of them should come with your OS

# OpenLDAP client commands
LDAPSEARCHBIN="<%= @ldapsearchbin %>"
LDAPADDBIN="<%= @ldapaddbin %>"
LDAPDELETEBIN="<%= @ldapdeletebin %>"
LDAPMODIFYBIN="<%= @ldapmodifybin %>"
LDAPMODRDNBIN="<%= @ldapmodrdnbin %>"
LDAPPASSWDBIN="<%= @ldappasswdbin %>"

# OpenLDAP client common additional options
# This allows for adding more configuration options to the OpenLDAP clients, e.g. '-ZZ' to enforce TLS
<% if @ldapbinopts -%>
LDAPBINOPTS="<%= @ldapbinopts %>"
<% else -%>
#LDAPBINOPTS="-ZZ"
<% end -%>


# OpenLDAP ldapsearch-specific additional options
# The following option disables long-line wrapping (which makes the scripts bug
# when handling long lines). The option was introduced in OpenLDAP 2.4.24, so
# comment it if you are using OpenLDAP < 2.4.24.
LDAPSEARCHOPTS="<%= @ldapsearchopts %>"
# And here is an example to activate paged results
#LDAPSEARCHOPTS="-E pr=500/noprompt"

# Character set conversion : $ICONVCHAR <-> UTF-8
# Comment ICONVBIN to disable UTF-8 conversion
<% if @iconvbin -%>
ICONVBIN="<%= @iconvbin %>"
<% else -%>
#ICONVBIN="/usr/bin/iconv"
<% end -%>
<% if @iconvchar -%>
ICONVCHAR="<%= @iconvchar %>"
<% else -%>
#ICONVCHAR="ISO-8859-15"
<% end -%>

# Base64 decoding
# Comment UUDECODEBIN to disable Base64 decoding
<% if @uudecodebin -%>
UUDECODEBIN="<%= @uudecodebin %>"
<% else -%>
#UUDECODEBIN="/usr/bin/uudecode"
<% end -%>

# Getent command to use - choose the ones used
# on your system. Leave blank or comment for auto-guess.
# GNU/Linux
#GETENTPWCMD="getent passwd"
#GETENTGRCMD="getent group"
# FreeBSD
#GETENTPWCMD="pw usershow"
#GETENTGRCMD="pw groupshow"
# Auto
GETENTPWCMD="<%= @getentpwcmd %>"
GETENTGRCMD="<%= @getentgrcmd %>"

# You can specify custom LDIF templates here
# Leave empty to use default templates
# See *.template.sample for default templates
#GTEMPLATE="/path/to/ldapaddgroup.template"
#UTEMPLATE="/path/to/ldapadduser.template"
#MTEMPLATE="/path/to/ldapaddmachine.template"
GTEMPLATE="<%= @gtemplate %>"
UTEMPLATE="<%= @utemplate %>"
MTEMPLATE="<%= @mtemplate %>"
